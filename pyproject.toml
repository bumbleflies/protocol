[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flipchart-ocr-pipeline"
version = "1.0.0"
description = "Flipchart OCR pipeline with SOLID principles"
readme = "README.md"
authors = [
    {name = "bumbleflies UG", email = "info@bumbleflies.com"}
]
license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Image Recognition",
]
requires-python = ">=3.11"
dependencies = [
    "numpy>=2.2.0,<2.3.0",
    "opencv-python>=4.12.0",
    "opencv-python-headless>=4.12.0",
    "Pillow>=12.0.0",
    "pypdf>=6.1.3",
    "requests>=2.32.5",
    "rich>=14.1.0",
    "python-dotenv>=1.0.1",
    "PyYAML>=6.0.2",
]

[project.optional-dependencies]
test = [
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.14.0",
    "pytest-asyncio>=1.2.0",
]
dev = [
    "flake8>=7.1.0",
    "black>=25.9.0",
    "mypy>=1.18.2",
    "pre-commit>=4.0.0",
    "types-requests>=2.32.4",
    "types-PyYAML>=6.0.12",
]

[project.urls]
Homepage = "https://github.com/bumbleflies/protocol"
Documentation = "https://github.com/bumbleflies/protocol/blob/main/CLAUDE.md"
Repository = "https://github.com/bumbleflies/protocol"
Issues = "https://github.com/bumbleflies/protocol/issues"

[tool.setuptools.packages.find]
include = ["tasks*", "pipeline*"]
exclude = ["tests*", "samples*"]

[tool.black]
line-length = 120
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=tasks",
    "--cov=pipeline",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["tasks", "pipeline"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"
